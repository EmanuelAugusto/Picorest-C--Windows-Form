<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>