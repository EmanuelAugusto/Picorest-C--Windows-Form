<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAA47AAAOOwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAAAAACEAAABeAAAAkgAA
        ALUAAADGAAAAxgAAALUAAACSAAAAXwAAACEAAAAAAAAAAAAAAAIAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAABAAAAFIAAAC4AAAA9wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+AAAALkAAABSAAAABAAAAAAAAAADAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAD8AAADPAAAA/wAA
        AP8AAADxAAAAsQAAAHcAAABTAAAAQgAAAEIAAABTAAAAdwAAALAAAADwAAAA/wAAAP8AAADPAAAAPwAA
        AAAAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAEAAACHAAAA/gAA
        AP8AAADYAAAAZAAAABIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABIAAABkAAAA2AAA
        AP8AAAD+AAAAhwAAAAEAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAGAAAArAAA
        AP8AAAD3AAAAfAAAAAYAAAAAAAAAAQAAAAMAAAAEAAAABAAAAAMAAAADAAAABAAAAAQAAAADAAAAAQAA
        AAAAAAAGAAAAfAAAAPcAAAD/AAAArAAAAAYAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AKsAAAD/AAAA5wAAAD4AAAAAAAAAAwAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABAAAAAMAAAAAAAAAPgAAAOcAAAD/AAAAqwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAACHAAAA/wAAAOcAAAAuAAAAAAAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAUAAAAAAAAALQAAAOcAAAD/AAAAhwAAAAAAAAADAAAAAAAA
        AAMAAAAAAAAARAAAAP8AAAD7AAAAQQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAQQAAAPwAAAD/AAAARAAA
        AAAAAAADAAAAAAAAAAMAAADJAAAA/wAAAHwAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAKAAAAlwAAAJcAAAAKAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAfAAA
        AP8AAADJAAAAAwAAAAAAAAAAAAAAVQAAAP8AAADTAAAACQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAJAAAA1AAAAP8AAABVAAAAAAAAAAAAAAC1AAAA/wAAAGYAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAO4AAADuAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAABmAAAA/wAAALUAAAAAAAAAJAAAAPcAAADwAAAAFgAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABYAAADwAAAA9wAAACQAAABeAAAA/wAAALAAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABAAAADyAAAA8gAAABAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAALEAAAD/AAAAXgAAAJEAAAD/AAAAeQAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAAAPIAAADyAAAAEAAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAeQAAAP8AAACQAAAAswAA
        AP8AAABVAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAA
        APIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABVAAAA/wAA
        ALMAAADGAAAA/wAAAEMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABAAAADyAAAA8gAAABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AEMAAAD/AAAAxQAAAMYAAAD/AAAAQwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAEAAAAO8AAADvAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAQwAAAP8AAADFAAAAswAAAP8AAABVAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAQAAAA8gAAAPIAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAABVAAAA/wAAALMAAACRAAAA/wAAAHkAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAABbAAAAWwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHkAAAD/AAAAkAAAAF4AAAD/AAAAsAAAAAAAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAsAAAAP8AAABeAAAAJAAAAPcAAADwAAAAFgAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABYAAADwAAAA9wAAACQAAAAAAAAAtQAA
        AP8AAABmAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA4AAADNAAAAzQAA
        AA4AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAZgAAAP8AAAC1AAAAAAAA
        AAAAAABVAAAA/wAAANMAAAAJAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEAAA
        APIAAADyAAAAEAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAkAAADTAAAA/wAA
        AFUAAAAAAAAAAAAAAAMAAADJAAAA/wAAAHsAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAIwAAACMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAewAA
        AP8AAADJAAAAAgAAAAAAAAADAAAAAAAAAEUAAAD/AAAA+wAAAEEAAAAAAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAA
        AEEAAAD7AAAA/wAAAEQAAAAAAAAAAwAAAAAAAAADAAAAAAAAAIcAAAD/AAAA5wAAAC0AAAAAAAAABQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABQAA
        AAAAAAAtAAAA5wAAAP8AAACHAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAAAAAKwAAAD/AAAA5wAA
        AD4AAAAAAAAAAwAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAA
        AAMAAAAAAAAAPgAAAOcAAAD/AAAArAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAABgAA
        AK0AAAD/AAAA9wAAAHwAAAAGAAAAAAAAAAEAAAADAAAABAAAAAQAAAADAAAAAwAAAAQAAAAEAAAAAwAA
        AAEAAAAAAAAABgAAAHsAAAD3AAAA/wAAAK0AAAAGAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAQAAAIcAAAD+AAAA/wAAANgAAABkAAAAEgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAEgAAAGQAAADXAAAA/wAAAP4AAACHAAAAAQAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAEAAAADPAAAA/wAAAP8AAADwAAAAsAAAAHcAAABTAAAAQgAA
        AEIAAABTAAAAdwAAALAAAADwAAAA/wAAAP8AAADPAAAAQAAAAAAAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAQAAABSAAAAuQAAAPgAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPgAAAC5AAAAUwAAAAUAAAAAAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAgAAAAAAAAAAAAAAIQAA
        AF8AAACSAAAAtQAAAMYAAADGAAAAtQAAAJIAAABfAAAAIQAAAAAAAAAAAAAAAgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8mAGT+kAAJfSAABLoAmQBUAgBAIQgAEIoSQkhUKf+UKFdC6hhPQvIYr0
        L1EJ9C+QE/QvyBP0L8gT9C/IF/Qv6Bf0L+gT9C/IE/QvyBP//8gJ9C+QivQvUYT0LyGFdC6hQp/5QqEk
        JIUQgYEIQCAEAqAJkAXSAABL6QAAl/JgBk8=
</value>
  </data>
</root>